
import java.io.*;

/*
Переопределение сериализации
*/
public class Solution implements Serializable, Runnable{
    transient private Thread runner;
    private int speed;
    transient private boolean cancel = false;

    public Solution(int speed) {
        this.speed = speed;
        runner = new Thread(this);
        runner.start();
    }

    public void cancel() {
        this.cancel = true;
    }
    public void run() {
        // do something here, does not matter
        int count = 0;
        while (true) {
            if (!cancel) {
                System.out.println(++count);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {}
            }
            else {
                System.out.println("ups");
                break;
            }
        }
    }

    /**
     Переопределяем сериализацию.
     Для этого необходимо объявить методы:
     private void writeObject(ObjectOutputStream out) throws IOException
     private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException
     Теперь сериализация/десериализация пойдет по нашему сценарию :)
     */
    private void writeObject(ObjectOutputStream out) throws IOException {
        out.defaultWriteObject();
    }

    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
        in.defaultReadObject();
        runner = new Thread(this);
        runner.start();
    }

    public static void main(String[] args) throws IOException, ClassNotFoundException {
        ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream("tmp.bin"));
        ObjectInputStream is = new ObjectInputStream(new FileInputStream("tmp.bin"));
        Solution test = new Solution(10000);
        os.writeObject(test);

        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        test.cancel();
        Solution s = (Solution) is.readObject();
        System.out.println("s");
    }
}
